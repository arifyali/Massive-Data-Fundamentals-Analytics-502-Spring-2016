x = 1:1e6
y=11*(1012+95)^11/(1012+95+x)^12
plot(x,y, type = "l")
x = 1:100
y=11*(1012+95)^11/(1012+95+x)^12
plot(x,y, type = "l")
x = seq(0,100, 0.1)
y=11*(1012+95)^11/(1012+95+x)^12
plot(x,y, type = "l")
x = seq(0,500, 0.1)
y=11*(1012+95)^11/(1012+95+x)^12
plot(x,y, type = "l")
z = seq(0,1000, 0.1)
density=11*(1012+95)^11/(1012+95+x)^12
plot(x,y, type = "l")
z = seq(0,1000, 0.1)
z = seq(0,1000, 0.1)
density=11*(1012+95)^11/(1012+95+z)^12
plot(z,density, type = "l")
school = read.table("~/Documents/Georgetown/Bayesian-Statistics-Mathematics-640/HW2/school.dat")
ybar = mean(school); s2 = var(school); n = length(school)
school = read.table("~/Documents/Georgetown/Bayesian-Statistics-Mathematics-640/HW2/school.dat")[,1]
ybar = mean(school); s2 = var(school); n = length(school)
m0 = 0; k0 = 0.1; v0 = 10; s0 = 4
school = read.table("~/Documents/Georgetown/Bayesian-Statistics-Mathematics-640/HW2/school.dat")[,1]
ybar = mean(school); s2 = var(school); n = length(school)
m0 = 0; k0 = 0.1; v0 = 10; s0 = 4
kn = k0 + n
mn = (k0*m0 + n*ybar)/kn
vn = v0 + n
sn = (v0*s0 + (n-1)*s2 + (k0*n/kn)*(ybar - m0)^2)/vn
phi  = rgamma(100000, vn/2, rate=vn/2*sn)
sigma2 = 1/phi
mu   = rnorm(100000, mn, sqrt(sigma2/kn))
school = read.table("~/Documents/Georgetown/Bayesian-Statistics-Mathematics-640/HW2/school.dat")[,1]
ybar = mean(school); s2 = var(school); n = length(school)
m0 = 0; k0 = 0.1; v0 = 10; s0 = 4
kn = k0 + n
mn = (k0*m0 + n*ybar)/kn
vn = v0 + n
sn = (v0*s0 + (n-1)*s2 + (k0*n/kn)*(ybar - m0)^2)/vn
phi  = rgamma(100000, vn/2, rate=vn/2*sn)
sigma2 = 1/phi
mu   = rnorm(100000, mn, sqrt(sigma2/kn))
print(mu,sigma2)
part3a = data.frame(mu,sigma2)
head(part3a)
quantile(mu, c(0.025,0.975))
quantile(sigma2, c(0.025,0.975))
vn
?qt
mumarginal = qt(c(0.025,0.75), df = vn)
mumarginal
mun + qt(c(0.025,0.75), df = vn)
mn + qt(c(0.025,0.75), df = vn)
quantile(mn, c(0.025,0.975))
mu + qt(c(0.025,0.75), df = vn)
quantile(mn, c(0.025,0.975))
quantile(sigma2, c(0.025,0.975))
mun + qt(c(0.025,0.75), df = vn)
mn + qt(c(0.025,0.975), df = vn)
mn + qt(c(0.025,0.975), df = vn) * sqrt(sn/kn)
mu + qt(c(0.025,0.975), df = vn) * sqrt(sn/kn)
quantile(mu, c(0.025,0.975))
quantile(sigma2, c(0.025,0.975))
mn + qt(c(0.025,0.975), df = vn) * sqrt(sn/kn)
quantile(mu, c(0.025,0.975))
quantile(sigma2, c(0.025,0.975))
mn + qt(c(0.025,0.975), df = vn) * sqrt(sn/kn)
phi  = rgamma(100000, vn/2, rate=vn/2*sn)
sigma2 = 1/phi
mu   = rnorm(100000, mn, sqrt(sigma2/kn))
mu.t = rt(100000, vn)*sqrt(sn/kn) + mn
qqplot(mu, mu.t)
library(coda)
th = as.mcmc(rgamma(1e6,10,1012))
th.hpd = HPDinterval(th, prob = 0.90)
th.hpd
th.ci = qgamma(c(0.05,0.95),10,1012)
curve(dgamma(x, 10,1012), from=0, to=0.2, xlab=expression(theta),
ylab=expression(paste("p(",theta,"|y)")))
lines(x=c(th.hpd[1], th.hpd[1], th.hpd[2], th.hpd[2]),
y = dgamma(c(0, th.hpd[1], th.hpd[2], 0), 10, 1012), col="blue", lwd=2, lty=1)
lines(x=c(th.ci[1], th.ci[1], th.ci[2], th.ci[2]),
y = dgamma(c(0, th.ci[1], th.ci[2], 0), 10, 1012), col="green", lwd=2, lty=1)
legend("topright", c("90% HPD interval", "90% credible interval"),
col=c("blue", "green"), lty=c(1,2), lwd=c(2,2), bty="n")
z = seq(0,1000, 0.1)
density=11*(1012+95)^11/(1012+95+z)^12
plot(z,density, type = "l")
curve(dgamma(x, 10,1012), from=0, to=0.2, xlab=expression(theta),
ylab=expression(paste("p(",theta,"|y)")))
lines(x=c(th.hpd[1], th.hpd[1], th.hpd[2], th.hpd[2]),
y = dgamma(c(0, th.hpd[1], th.hpd[2], 0), 10, 1012), col="blue", lwd=2, lty=1)
lines(x=c(th.ci[1], th.ci[1], th.ci[2], th.ci[2]),
y = dgamma(c(0, th.ci[1], th.ci[2], 0), 10, 1012), col="green", lwd=2, lty=1)
legend("topright", c("90% HPD interval", "90% credible interval"),
col=c("blue", "green"), lty=c(1,2), lwd=c(2,2), bty="n")
mean(mu)
quantile(mu, c(0.025,0.975))
mean(sigma2)
quantile(sigma2, c(0.025,0.975))
library(coda)
th = as.mcmc(rgamma(1e6,10,1012))
th.hpd = HPDinterval(th, prob = 0.90)
th.hpd
th.ci = qgamma(c(0.05,0.95),10,1012)
curve(dgamma(x, 10,1012), from=0, to=0.2, xlab=expression(theta),
ylab=expression(paste("p(",theta,"|y)")))
lines(x=c(th.hpd[1], th.hpd[1], th.hpd[2], th.hpd[2]),
y = dgamma(c(0, th.hpd[1], th.hpd[2], 0), 10, 1012), col="blue", lwd=2, lty=1)
lines(x=c(th.ci[1], th.ci[1], th.ci[2], th.ci[2]),
y = dgamma(c(0, th.ci[1], th.ci[2], 0), 10, 1012), col="green", lwd=2, lty=1)
legend("topright", c("90% HPD interval", "90% credible interval"),
col=c("blue", "green"), lty=c(1,2), lwd=c(2,2), bty="n")
z = seq(0,1000, 0.1)
density=11*(1012+95)^11/(1012+95+z)^12
plot(z,density, type = "l")
### Exercise 3
# Part A
school = read.table("~/Documents/Georgetown/Bayesian-Statistics-Mathematics-640/HW2/school.dat")[,1]
ybar = mean(school); s2 = var(school); n = length(school)
m0 = 0; k0 = 0.1; v0 = 10; s0 = 4
kn = k0 + n
mn = (k0*m0 + n*ybar)/kn
vn = v0 + n
sn = (v0*s0 + (n-1)*s2 + (k0*n/kn)*(ybar - m0)^2)/vn
phi  = rgamma(100000, vn/2, rate=vn/2*sn)
sigma2 = 1/phi
mu   = rnorm(100000, mn, sqrt(sigma2/kn))
# Part B
quantile(mu, c(0.025,0.975))
quantile(sigma2, c(0.025,0.975))
# Part C
mn + qt(c(0.025,0.975), df = vn) * sqrt(sn/kn)
mn
library(coda)
th = as.mcmc(rgamma(1e6,10,1012))
th.hpd = HPDinterval(th, prob = 0.90)
th.hpd
th.ci = qgamma(c(0.05,0.95),10,1012)
curve(dgamma(x, 10,1012), from=0, to=0.2, xlab=expression(theta),
ylab=expression(paste("p(",theta,"|y)")))
lines(x=c(th.hpd[1], th.hpd[1], th.hpd[2], th.hpd[2]),
y = dgamma(c(0, th.hpd[1], th.hpd[2], 0), 10, 1012), col="blue", lwd=2, lty=1)
lines(x=c(th.ci[1], th.ci[1], th.ci[2], th.ci[2]),
y = dgamma(c(0, th.ci[1], th.ci[2], 0), 10, 1012), col="green", lwd=2, lty=1)
legend("topright", c("90% HPD interval", "90% credible interval"),
col=c("blue", "green"), lty=c(1,2), lwd=c(2,2), bty="n")
z = seq(0,1000, 0.1)
density=11*(1012+95)^11/(1012+95+z)^12
plot(z,density, type = "l")
### Exercise 3
# Part A
school = read.table("~/Documents/Georgetown/Bayesian-Statistics-Mathematics-640/HW2/school.dat")[,1]
ybar = mean(school); s2 = var(school); n = length(school)
m0 = 0; k0 = 0.1; v0 = 10; s0 = 4
kn = k0 + n
mn = (k0*m0 + n*ybar)/kn
vn = v0 + n
sn = (v0*s0 + (n-1)*s2 + (k0*n/kn)*(ybar - m0)^2)/vn
phi  = rgamma(100000, vn/2, rate=vn/2*sn)
sigma2 = 1/phi
mu   = rnorm(100000, mn, sqrt(sigma2/kn))
# Part B
quantile(mu, c(0.025,0.975))
quantile(sigma2, c(0.025,0.975))
# Part C
mn + qt(c(0.025,0.975), df = vn) * sqrt(sn/kn)
# Part E
# draw posterior samples
phi  = rgamma(100000, vn/2, rate=vn/2*sn)
sigma2 = 1/phi
mu   = rnorm(100000, mu, sqrt(sigma2))
mu.t = rt(100000, vn)*sqrt(sn/kn) + mn
qqplot(mu, mu.t)
mn
library(coda)
th = as.mcmc(rgamma(1e6,10,1012))
th.hpd = HPDinterval(th, prob = 0.90)
th.hpd
th.ci = qgamma(c(0.05,0.95),10,1012)
curve(dgamma(x, 10,1012), from=0, to=0.2, xlab=expression(theta),
ylab=expression(paste("p(",theta,"|y)")))
lines(x=c(th.hpd[1], th.hpd[1], th.hpd[2], th.hpd[2]),
y = dgamma(c(0, th.hpd[1], th.hpd[2], 0), 10, 1012), col="blue", lwd=2, lty=1)
lines(x=c(th.ci[1], th.ci[1], th.ci[2], th.ci[2]),
y = dgamma(c(0, th.ci[1], th.ci[2], 0), 10, 1012), col="green", lwd=2, lty=1)
legend("topright", c("90% HPD interval", "90% credible interval"),
col=c("blue", "green"), lty=c(1,2), lwd=c(2,2), bty="n")
z = seq(0,1000, 0.1)
density=11*(1012+95)^11/(1012+95+z)^12
plot(z,density, type = "l")
### Exercise 3
# Part A
school = read.table("~/Documents/Georgetown/Bayesian-Statistics-Mathematics-640/HW2/school.dat")[,1]
ybar = mean(school); s2 = var(school); n = length(school)
m0 = 0; k0 = 0.1; v0 = 10; s0 = 4
kn = k0 + n
mn = (k0*m0 + n*ybar)/kn
vn = v0 + n
sn = (v0*s0 + (n-1)*s2 + (k0*n/kn)*(ybar - m0)^2)/vn
phi  = rgamma(100000, vn/2, rate=vn/2*sn)
sigma2 = 1/phi
mu   = rnorm(100000, mn, sqrt(sigma2/kn))
# Part B
quantile(mu, c(0.025,0.975))
quantile(sigma2, c(0.025,0.975))
# Part C
mn + qt(c(0.025,0.975), df = vn) * sqrt(vn*sn/kn*1/(vn-2))
library(coda)
th = as.mcmc(rgamma(1e6,10,1012))
th.hpd = HPDinterval(th, prob = 0.90)
th.hpd
th.ci = qgamma(c(0.05,0.95),10,1012)
curve(dgamma(x, 10,1012), from=0, to=0.2, xlab=expression(theta),
ylab=expression(paste("p(",theta,"|y)")))
lines(x=c(th.hpd[1], th.hpd[1], th.hpd[2], th.hpd[2]),
y = dgamma(c(0, th.hpd[1], th.hpd[2], 0), 10, 1012), col="blue", lwd=2, lty=1)
lines(x=c(th.ci[1], th.ci[1], th.ci[2], th.ci[2]),
y = dgamma(c(0, th.ci[1], th.ci[2], 0), 10, 1012), col="green", lwd=2, lty=1)
legend("topright", c("90% HPD interval", "90% credible interval"),
col=c("blue", "green"), lty=c(1,2), lwd=c(2,2), bty="n")
z = seq(0,1000, 0.1)
density=11*(1012+95)^11/(1012+95+z)^12
plot(z,density, type = "l")
### Exercise 3
# Part A
school = read.table("~/Documents/Georgetown/Bayesian-Statistics-Mathematics-640/HW2/school.dat")[,1]
ybar = mean(school); s2 = var(school); n = length(school)
m0 = 0; k0 = 0.1; v0 = 10; s0 = 4
kn = k0 + n
mn = (k0*m0 + n*ybar)/kn
vn = v0 + n
sn = (v0*s0 + (n-1)*s2 + (k0*n/kn)*(ybar - m0)^2)/vn
phi  = rgamma(100000, vn/2, rate=vn/2*sn)
sigma2 = 1/phi
mu   = rnorm(100000, mn, sqrt(sigma2/kn))
# Part B
quantile(mu, c(0.025,0.975))
quantile(sigma2, c(0.025,0.975))
# Part C
mn + qt(c(0.025,0.975), df = vn) * sqrt(vn*sn/kn*1/(vn-2))
### Exercise 2
library(coda)
th = as.mcmc(rgamma(1e6,10,1012))
th.hpd = HPDinterval(th, prob = 0.90)
th.hpd
th.ci = qgamma(c(0.05,0.95),10,1012)
curve(dgamma(x, 10,1012), from=0, to=0.2, xlab=expression(theta),
ylab=expression(paste("p(",theta,"|y)")))
lines(x=c(th.hpd[1], th.hpd[1], th.hpd[2], th.hpd[2]),
y = dgamma(c(0, th.hpd[1], th.hpd[2], 0), 10, 1012), col="blue", lwd=2, lty=1)
lines(x=c(th.ci[1], th.ci[1], th.ci[2], th.ci[2]),
y = dgamma(c(0, th.ci[1], th.ci[2], 0), 10, 1012), col="green", lwd=2, lty=1)
legend("topright", c("90% HPD interval", "90% credible interval"),
col=c("blue", "green"), lty=c(1,2), lwd=c(2,2), bty="n")
z = seq(0,1000, 0.1)
density=11*(1012+95)^11/(1012+95+z)^12
plot(z,density, type = "l")
### Exercise 3
# Part A
school = read.table("~/Documents/Georgetown/Bayesian-Statistics-Mathematics-640/HW2/school.dat")[,1]
ybar = mean(school); s2 = var(school); n = length(school)
m0 = 0; k0 = 0.1; v0 = 10; s0 = 4
kn = k0 + n
mn = (k0*m0 + n*ybar)/kn
vn = v0 + n
sn = (v0*s0 + (n-1)*s2 + (k0*n/kn)*(ybar - m0)^2)/vn
phi  = rgamma(100000, vn/2, rate=vn/2*sn)
sigma2 = 1/phi
mu   = rnorm(100000, mn, sqrt(sigma2/kn))
# Part B
quantile(mu, c(0.025,0.975))
quantile(sigma2, c(0.025,0.975))
# Part C
mn + qt(c(0.025,0.975), df = vn) * sqrt(vn*sn/kn/(vn-2))
?rt
samp.3d <- rnorm(n = 1e5, mean = samp.3a[,1], sd = sqrt(samp.3a[,2]))
samp.3d <- rnorm(n = 1e5, mean = samp.3a[,1], sd = sqrt(samp.3a[,2]))
samp.3d <- rnorm(n = 1e5, mean = mu, sd = sqrt(sigma2))
y_tild   = rnorm(100000, mn, sqrt(sigma2/kn))
mean(mu)+rt(100000, df = n, ncp = 0)*sqrt(sn*(1+1/kn))
sqrt(sn*(1+1/kn))
mean(mu)
c(1,1)*c(3,4)
c(1,2)*c(3,4)
mn+rt(100000, df = n, ncp = 0)*sqrt(sn*(1+1/kn))
mu.t = mn+rt(100000, df = n, ncp = 0)*sqrt(sn*(1+1/kn))
partd = rnorm(100000, mu, sigma2)
partd = rnorm(100000, mu, sqrt(sigma2))
qqplot(partd, mu.t)
?rnorm
mu.c = rt(1e6, df=31)*0.24^2/32+1.013
mu.t = rt(1e6, df=35)*0.2^2/36+1.173
hist(mu.t-mu.c)
hist(mu.t-mu.c, breaks = 50)
quantile(mu.t-mu.c, c(0.025,0.975))
1e6*.025
1e6*.975
(sort(mu.t-mu))[c(25000, 975000)]
?sort
diff = sort(mu.t-mu)
diff[1:10]
diff[c(25000, 975000)]
(sort(mu.t-mu.c))[c(25000, 975000)]
### Exercise 1
# Part B
mu.c = rt(1e6, df=31)*0.24^2/32+1.013
mu.t = rt(1e6, df=35)*0.2^2/36+1.173
quantile(mu.t-mu.c, c(0.025,0.975))
hist(mu.t-mu.c, breaks = 50)
### Exercise 2
library(coda)
th = as.mcmc(rgamma(1e6,10,1012))
th.hpd = HPDinterval(th, prob = 0.90)
th.hpd
th.ci = qgamma(c(0.05,0.95),10,1012)
curve(dgamma(x, 10,1012), from=0, to=0.2, xlab=expression(theta),
ylab=expression(paste("p(",theta,"|y)")))
lines(x=c(th.hpd[1], th.hpd[1], th.hpd[2], th.hpd[2]),
y = dgamma(c(0, th.hpd[1], th.hpd[2], 0), 10, 1012), col="blue", lwd=2, lty=1)
lines(x=c(th.ci[1], th.ci[1], th.ci[2], th.ci[2]),
y = dgamma(c(0, th.ci[1], th.ci[2], 0), 10, 1012), col="green", lwd=2, lty=1)
legend("topright", c("90% HPD interval", "90% credible interval"),
col=c("blue", "green"), lty=c(1,2), lwd=c(2,2), bty="n")
z = seq(0,1000, 0.1)
density=11*(1012+95)^11/(1012+95+z)^12
plot(z,density, type = "l")
### Exercise 3
# Part A
school = read.table("~/Documents/Georgetown/Bayesian-Statistics-Mathematics-640/HW2/school.dat")[,1]
ybar = mean(school); s2 = var(school); n = length(school)
m0 = 0; k0 = 0.1; v0 = 10; s0 = 4
kn = k0 + n
mn = (k0*m0 + n*ybar)/kn
vn = v0 + n
sn = (v0*s0 + (n-1)*s2 + (k0*n/kn)*(ybar - m0)^2)/vn
phi  = rgamma(100000, vn/2, rate=vn/2*sn)
sigma2 = 1/phi
mu   = rnorm(100000, mn, sqrt(sigma2/kn))
# Part B
quantile(mu, c(0.025,0.975))
quantile(sigma2, c(0.025,0.975))
# Part C
mn + qt(c(0.025,0.975), df = vn) * sqrt(vn*sn/kn/(vn-2))
# Part D
partd = rnorm(100000, mu, sqrt(sigma2))
# Part E
# draw posterior samples
phi  = rgamma(100000, vn/2, rate=vn/2*sn)
sigma2 = 1/phi
y_tild   = rnorm(100000, mn, sqrt(sigma2/kn))
mu.t = rt(100000, vn)*sqrt(sn/kn) + mn
qqplot(partd, mu.t)
mn + qt(c(0.025,0.975), df = vn) * sqrt(sn/kn)
partd = rnorm(100000, mu, sqrt(sigma2))
phi  = rgamma(100000, vn/2, rate=vn/2*sn)
sigma2 = 1/phi
y_tild   = rnorm(100000, mn, sqrt(sigma2/kn))
mu.t = rt(100000, vn)*sqrt(sn/kn) + mn
qqplot(partd, mu.t)
parte = mn + rt(100000, df = vn)*sqrt(sn*(1+1/kn))
parte = mn + rt(100000, df = vn)*sqrt(sn/n*(1+1/kn))
qqplot(partd,parte)
parte = mn + rt(100000, df = vn)*sqrt(sn^2*(1+1/kn))
qqplot(partd,parte)
parte = mn + rt(100000, df = vn)*sqrt(sn^2/n*(1+1/kn))
qqplot(partd,parte)
parte = mn + rt(100000, df = vn)*sqrt(sn^2/kn*(1+1/kn))
partd = rnorm(100000, mu, sqrt(sigma2))
# Part E
parte = mn + rt(100000, df = vn)*sqrt(sn^2/kn*(1+1/kn))
qqplot(partd,parte)
parte = mn + rt(100000, df = vn)*sqrt(sn^2/vn*(1+1/kn))
qqplot(partd,parte)
school = read.table("~/Documents/Georgetown/Bayesian-Statistics-Mathematics-640/HW2/school.dat")[,1]
ybar = mean(school); s2 = var(school); n = length(school)
m0 = 0; k0 = 0.1; v0 = 10; s0 = 4
kn = k0 + n
mn = (k0*m0 + n*ybar)/kn
vn = v0 + n
sn = (v0*s0 + (n-1)*s2 + (k0*n/kn)*(ybar - m0)^2)/vn
phi  = rgamma(100000, vn/2, rate=vn/2*sn)
sigma2 = 1/phi
mu   = rnorm(100000, mn, sqrt(sigma2/kn))
# Part B
quantile(mu, c(0.025,0.975))
quantile(sigma2, c(0.025,0.975))
# Part C
mn + qt(c(0.025,0.975), df = vn) * sqrt(sn/kn)
# Part D
partd = rnorm(100000, mu, sqrt(sigma2))
# Part E
parte = mn + rt(100000, df = vn)*sqrt(sn^2/vn*(1+1/kn))
qqplot(partd,parte)
parte = mn + rt(100000, df = vn)*sqrt(sn/vn*(1+1/kn))
qqplot(partd,parte)
partd = rnorm(100000, mu, sqrt(sigma2))
# Part E
parte = mn + rt(100000, df = vn)*sqrt(sn*(1+1/kn))
qqplot(partd,parte)
mu.c = rt(1e6, df=31)*0.24^2/32+1.013
mu.t = rt(1e6, df=35)*0.2^2/36+1.173
quantile(mu.t-mu.c, c(0.025,0.975))
hist(mu.t-mu.c, breaks = 50)
### Exercise 2
library(coda)
th = as.mcmc(rgamma(1e6,10,1012))
th.hpd = HPDinterval(th, prob = 0.90)
th.hpd
th.ci = qgamma(c(0.05,0.95),10,1012)
curve(dgamma(x, 10,1012), from=0, to=0.2, xlab=expression(theta),
ylab=expression(paste("p(",theta,"|y)")))
lines(x=c(th.hpd[1], th.hpd[1], th.hpd[2], th.hpd[2]),
y = dgamma(c(0, th.hpd[1], th.hpd[2], 0), 10, 1012), col="blue", lwd=2, lty=1)
lines(x=c(th.ci[1], th.ci[1], th.ci[2], th.ci[2]),
y = dgamma(c(0, th.ci[1], th.ci[2], 0), 10, 1012), col="green", lwd=2, lty=1)
legend("topright", c("90% HPD interval", "90% credible interval"),
col=c("blue", "green"), lty=c(1,2), lwd=c(2,2), bty="n")
z = seq(0,1000, 0.1)
density=11*(1012+95)^11/(1012+95+z)^12
plot(z,density, type = "l")
### Exercise 3
# Part A
school = read.table("~/Documents/Georgetown/Bayesian-Statistics-Mathematics-640/HW2/school.dat")[,1]
ybar = mean(school); s2 = var(school); n = length(school)
m0 = 0; k0 = 0.1; v0 = 10; s0 = 4
kn = k0 + n
mn = (k0*m0 + n*ybar)/kn
vn = v0 + n
sn = (v0*s0 + (n-1)*s2 + (k0*n/kn)*(ybar - m0)^2)/vn
phi  = rgamma(100000, vn/2, rate=vn/2*sn)
sigma2 = 1/phi
mu   = rnorm(100000, mn, sqrt(sigma2/kn))
# Part B
quantile(mu, c(0.025,0.975))
quantile(sigma2, c(0.025,0.975))
# Part C
mn + qt(c(0.025,0.975), df = vn) * sqrt(sn/kn)
# Part D
partd = rnorm(100000, mu, sqrt(sigma2))
# Part E
parte = mn + rt(100000, df = vn)*sqrt(sn*(1+1/kn))
qqplot(partd,parte)
max(parte)
max(partd)
mu.c = rt(1e6, df=31)*0.24^2/32+1.013
mu.t = rt(1e6, df=35)*0.2^2/36+1.173
quantile(mu.t-mu.c, c(0.025,0.975))
hist(mu.t-mu.c, breaks = 50)
### Exercise 2
library(coda)
th = as.mcmc(rgamma(1e6,10,1012))
th.hpd = HPDinterval(th, prob = 0.90)
th.hpd
th.ci = qgamma(c(0.05,0.95),10,1012)
curve(dgamma(x, 10,1012), from=0, to=0.2, xlab=expression(theta),
ylab=expression(paste("p(",theta,"|y)")))
lines(x=c(th.hpd[1], th.hpd[1], th.hpd[2], th.hpd[2]),
y = dgamma(c(0, th.hpd[1], th.hpd[2], 0), 10, 1012), col="blue", lwd=2, lty=1)
lines(x=c(th.ci[1], th.ci[1], th.ci[2], th.ci[2]),
y = dgamma(c(0, th.ci[1], th.ci[2], 0), 10, 1012), col="green", lwd=2, lty=1)
legend("topright", c("90% HPD interval", "90% credible interval"),
col=c("blue", "green"), lty=c(1,2), lwd=c(2,2), bty="n")
z = seq(0,1000, 0.1)
density=11*(1012+95)^11/(1012+95+z)^12
plot(z,density, type = "l")
### Exercise 3
# Part A
school = read.table("~/Documents/Georgetown/Bayesian-Statistics-Mathematics-640/HW2/school.dat")[,1]
ybar = mean(school); s2 = var(school); n = length(school)
m0 = 0; k0 = 0.1; v0 = 10; s0 = 4
kn = k0 + n
mn = (k0*m0 + n*ybar)/kn
vn = v0 + n
sn = (v0*s0 + (n-1)*s2 + (k0*n/kn)*(ybar - m0)^2)/vn
phi  = rgamma(100000, vn/2, rate=vn/2*sn)
sigma2 = 1/phi
mu   = rnorm(100000, mn, sqrt(sigma2/kn))
# Part B
quantile(mu, c(0.025,0.975))
quantile(sigma2, c(0.025,0.975))
# Part C
mn + qt(c(0.025,0.975), df = vn) * sqrt(sn/kn)
# Part D
partd = rnorm(100000, mu, sqrt(sigma2))
# Part E
parte = mn + rt(100000, df = vn)*sqrt(sn*(1+1/kn))
qqplot(partd,parte)
partd = rnorm(10000, mu, sqrt(sigma2))
# Part E
parte = mn + rt(10000, df = vn)*sqrt(sn*(1+1/kn))
qqplot(partd,parte)
partd = rnorm(1000, mu, sqrt(sigma2))
# Part E
parte = mn + rt(1000, df = vn)*sqrt(sn*(1+1/kn))
qqplot(partd,parte)
partd = rnorm(100000, mu, sqrt(sigma2))
parte = mn + rt(100000, df = vn)*sqrt(sn*(1+1/kn))
qqplot(partd,parte)
?qqplot
0.1*0+25*9.464
(0.1*0+25*9.464)/ybar
(0.1*0+25*9.464)/kn
?merge
setwd("~/Documents/Georgetown/Massive-Data-Fundamentals-Analytics-502-Spring-2016/HW3/")
wiki_stats = read.table("wikipedia_stats.txt")
View(wiki_stats)
barplot(wiki_stats)
barplot(wiki_stats$V2)
barplot(wiki_stats$V2,names.arg = wiki_stats$V1)
